// Mocks generated by Mockito 5.3.2 from annotations
// in content/test/translations/translations_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i2;

import 'package:content/translations/errors/fetch_translations_strategy_errors.dart'
    as _i8;
import 'package:content/translations/strategies/fetch_translations_strategy.dart'
    as _i7;
import 'package:content/translations/strategies/missing_key_handler_strategy.dart'
    as _i10;
import 'package:crashlytics/crashlytics_service.dart' as _i4;
import 'package:flutter/material.dart' as _i6;
import 'package:local_storage/local_storage.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:result/result.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocale_0 extends _i1.SmartFake implements _i2.Locale {
  _FakeLocale_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<ERR extends Object, OK extends Object> extends _i1.SmartFake
    implements _i3.Result<ERR, OK> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CrashlyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrashlyticsService extends _i1.Mock
    implements _i4.CrashlyticsService {
  MockCrashlyticsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> logError(
    Object? exception,
    StackTrace? stack, {
    String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logError,
          [
            exception,
            stack,
          ],
          {#reason: reason},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> logNetworkError({
    required String? url,
    required Map<String, Object?>? bodyRequest,
    required Map<String, Object?>? bodyResponse,
    required int? statusCode,
    required String? method,
    required Map<String, Object?>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logNetworkError,
          [],
          {
            #url: url,
            #bodyRequest: bodyRequest,
            #bodyResponse: bodyResponse,
            #statusCode: statusCode,
            #method: method,
            #headers: headers,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> setUserId(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> setCustomKey(
    String? key,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCustomKey,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> setCurrentScreen(String? currentPage) => (super.noSuchMethod(
        Invocation.method(
          #setCurrentScreen,
          [currentPage],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> onFlutterError(_i6.FlutterErrorDetails? details) =>
      (super.noSuchMethod(
        Invocation.method(
          #onFlutterError,
          [details],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [FetchTranslationsStrategy].
///
/// See the documentation for Mockito's code generation for more information.
class MockFetchTranslationsStrategy extends _i1.Mock
    implements _i7.FetchTranslationsStrategy {
  MockFetchTranslationsStrategy() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_0(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i2.Locale);
  @override
  _i5.Future<_i3.Result<_i8.FetchTranslationsStrategyError, _i9.Json>> call() =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i5.Future<
                _i3.Result<_i8.FetchTranslationsStrategyError, _i9.Json>>.value(
            _FakeResult_1<_i8.FetchTranslationsStrategyError, _i9.Json>(
          this,
          Invocation.method(
            #call,
            [],
          ),
        )),
      ) as _i5
          .Future<_i3.Result<_i8.FetchTranslationsStrategyError, _i9.Json>>);
}

/// A class which mocks [MissingKeyHandlerStrategy].
///
/// See the documentation for Mockito's code generation for more information.
class MockMissingKeyHandlerStrategy extends _i1.Mock
    implements _i10.MissingKeyHandlerStrategy {
  MockMissingKeyHandlerStrategy() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String call(String? key) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [key],
        ),
        returnValue: '',
      ) as String);
}
